--SQL Statements used

--Objects creation

CREATE TABLE ACCOUNT_TYPE (ACCOUNT_CATEGORY INT NOT NULL, ACCOUNT_CATEGORY_NAME CHAR(100) NOT NULL, 
CONSTRAINT ACCOUNT_TYPE_PK PRIMARY KEY (ACCOUNT_CATEGORY));


CREATE TABLE CUSTOMER(
    SSN BIGINT NOT NULL,
    CUSTOMER_FIRST_NAME CHAR(60) NOT NULL, 
    CUSTOMER_MIDDLE_NAME CHAR(60), 
    CUSTOMER_LAST_NAME CHAR(60) NOT NULL, CONSTRAINT CUSTOMER_PK PRIMARY KEY (SSN));


CREATE TABLE ACCOUNT(ACCOUNT_ID BIGINT NOT NULL, 
ACCOUNT_CATEGORY INT NOT NULL, 
ACCOUNT_BALANCE  DECIMAL(30,2) NOT NULL, 
CONSTRAINT ACCOUNT_PK PRIMARY KEY (ACCOUNT_ID), 
CONSTRAINT ACCOUNT_FK_1 FOREIGN KEY (ACCOUNT_CATEGORY) 
REFERENCES ACCOUNT_TYPE(ACCOUNT_CATEGORY));


   CREATE TABLE CUSTOMER_ACCOUNT (SSN BIGINT NOT NULL, ACCOUNT_ID BIGINT NOT NULL, 
   CONSTRAINT CUSTOMER_ACCOUNT_PK PRIMARY KEY (SSN, ACCOUNT_ID), 
   CONSTRAINT CUSTOMER_ACCOUNT_FK1 FOREIGN KEY (SSN) REFERENCES CUSTOMER(SSN),
   CONSTRAINT CUSTOMER_ACCOUNT_FK2 FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID));
   

   CREATE TABLE ADDRESS(ADDRESS_ID BIGINT NOT NULL, HOUSE_NUMBER VARCHAR(254) NOT NULL, 
   APT_NUMBER VARCHAR(254), STREET VARCHAR(254) NOT NULL, CITY VARCHAR(254) NOT NULL,
   STATE CHAR(2) NOT NULL, COUNTRY CHAR(60) NOT NULL, ZIP CHAR(10) NOT NULL, CONSTRAINT ADDRESS_PK PRIMARY KEY (ADDRESS_ID)
   );


CREATE TABLE CUSTOMER_ADDRESS (SSN BIGINT NOT NULL, ADDRESS_ID BIGINT NOT NULL, ADDRESS_TYPE CHAR(1) NOT NULL,
CONSTRAINT CUSTOMER_ADDRESS_PK PRIMARY KEY(SSN,ADDRESS_ID, ADDRESS_TYPE),
CONSTRAINT CUSTOMER_ADDRESS_FK1 FOREIGN KEY(SSN) REFERENCES CUSTOMER(SSN),
CONSTRAINT CUSTOMER_ADDRESS_FK2 FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID),
CONSTRAINT CUSTOMER_ADDRESS_CK1 CHECK(ADDRESS_TYPE IN ('P','S'))) ;





--Data Population

INSERT INTO ACCOUNT_TYPE VALUES(1, 'SAVINGS');
INSERT INTO ACCOUNT_TYPE VALUES(2, 'CHECKING');

INSERT INTO CUSTOMER VALUES(123456789,'NICHOLAS',NULL,'PAUL');
INSERT INTO CUSTOMER VALUES(123456780,'JOHN','S','ABRAHAM');
INSERT INTO CUSTOMER VALUES(123456799,'NANCY','M','CHARLOTTE');
INSERT INTO CUSTOMER VALUES(123456710,'CHRIS','M','BOLAS');

INSERT INTO ACCOUNT VALUES(123,1,130);
INSERT INTO ACCOUNT VALUES(122,1,140);
INSERT INTO ACCOUNT VALUES(120,2,1300);
INSERT INTO ACCOUNT VALUES(129,2,10);
INSERT INTO ACCOUNT VALUES(110,1,1199);

INSERT INTO CUSTOMER_ACCOUNT VALUES(123456789,123);
INSERT INTO CUSTOMER_ACCOUNT VALUES(123456789,122);
INSERT INTO CUSTOMER_ACCOUNT VALUES(123456780,123);
INSERT INTO CUSTOMER_ACCOUNT VALUES(123456799,120);
INSERT INTO CUSTOMER_ACCOUNT VALUES(123456799,129);
INSERT INTO CUSTOMER_ACCOUNT VALUES(123456799,110);

INSERT INTO ADDRESS VALUES(1,'123','311','SOMERSET BLVD','NEW YORK', 'NY', 'USA', '08522');
INSERT INTO ADDRESS VALUES(2,'311',NULL,'KNIGHT STREET','DALLAS', 'TX', 'USA', '92312');
INSERT INTO ADDRESS VALUES(3,'A932','T12','WHITE STREET','BALTIMORE', 'MD', 'USA', '23212');
INSERT INTO ADDRESS VALUES(4,'W-835','SUITE-3','FOX RUN AVE','TAMPA', 'FL', 'USA', '89422');
INSERT INTO ADDRESS VALUES(5,'R99A',NULL,'168 STREET','SAINT LOUIS', 'MO', 'USA', '34522');

INSERT INTO CUSTOMER_ADDRESS VALUES(123456789,2,'P');
INSERT INTO CUSTOMER_ADDRESS VALUES(123456789,1,'S');
INSERT INTO CUSTOMER_ADDRESS VALUES(123456780,3,'P');
INSERT INTO CUSTOMER_ADDRESS VALUES(123456799,4,'P');
INSERT INTO CUSTOMER_ADDRESS VALUES(123456710,5,'P');





--Querying the tables for information

--Querying the data (For many to many relationships). A customer can have multiple accounts and an account can be held by multiple people (joint account):
--This query find all the customers who has accounts, along with the customer names, account balances, you can use the following query:

SELECT A.SSN, A.CUSTOMER_FIRST_NAME, A.CUSTOMER_MIDDLE_NAME, A.CUSTOMER_LAST_NAME, B.ACCOUNT_ID, B.ACCOUNT_BALANCE, D.ACCOUNT_CATEGORY_NAME FROM
CUSTOMER A, ACCOUNT B, CUSTOMER_ACCOUNT C, ACCOUNT_TYPE D
WHERE A.SSN = C.SSN AND C.ACCOUNT_ID = B.ACCOUNT_ID AND B.ACCOUNT_CATEGORY = D.ACCOUNT_CATEGORY;

--To find the account numbers and their account types (categories), use the following query. This acts as an example for one to many (between ACCOUNT_TYPE and ACCOUNT tables)

SELECT A.ACCOUNT_ID, B.ACCOUNT_CATEGORY_NAME FROM ACCOUNT A, ACCOUNT_TYPE B WHERE A.ACCOUNT_CATEGORY = B.ACCOUNT_CATEGORY;


--Additional query: To find all the customers who has NO account:
SELECT * FROM CUSTOMER WHERE SSN NOT IN (SELECT SSN FROM CUSTOMER_ACCOUNT);


